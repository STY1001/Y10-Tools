name: Build WPF App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Publish as self-contained exe
        run: dotnet publish -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: pip install transformers torch

      - name: Generate Release Notes
        id: generate_notes
        run: |
          python -c """
import torch
from transformers import GPTNeoForCausalLM, AutoTokenizer

model_name = 'EleutherAI/gpt-neo-125M'
model = GPTNeoForCausalLM.from_pretrained(model_name)
tokenizer = AutoTokenizer.from_pretrained(model_name)

commit_message = '''$(git log -1 --pretty=%B)'''
input_text = f'Generate release notes based on the following commit message: {commit_message}'

input_ids = tokenizer(input_text, return_tensors='pt').input_ids

with torch.no_grad():
    output = model.generate(input_ids, max_length=150)

notes = tokenizer.decode(output[0], skip_special_tokens=True)
print(f'::set-output name=notes::{notes}')
"""

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create temp-release --draft --title "Draft Release" --notes "${{ steps.generate_notes.outputs.notes }}"

      - name: Upload Artifact to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload temp-release "Y10_Tools\bin\Release\net8.0-windows\win-x64\publish\Y10_Tools.exe"
